plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.gms.google-services'
//    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
    id "kotlin-parcelize"
}

android {

    compileSdkVersion 32

    defaultConfig {
        applicationId "com.massage.massenger"
        minSdkVersion 24
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
//        kotlinCompilerVersion kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

//    ksp {
//        arg("compose-destinations.generateNavGraphs", "false")
//    }
}

//kotlin {
//    sourceSets {
//        debug {
//            kotlin.srcDir("build/generated/ksp/debug/kotlin")
//        }
//        release {
//            kotlin.srcDir("build/generated/ksp/release/kotlin")
//        }
//    }
//}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"


    // Preference Storage
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-core:1.0.0"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"


    // Hilt
    // Dependency Injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // for using hiltViewModel() function
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    //kotlin serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"

    //Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.activity:activity-compose:1.4.0"

    // compose navigation
    implementation "androidx.navigation:navigation-compose:2.4.1"
    //    implementation 'io.github.raamcosta.compose-destinations:core:1.1.3-beta'
    //    ksp 'io.github.raamcosta.compose-destinations:ksp:1.1.3-beta'

    // keypad padding
    implementation "com.google.accompanist:accompanist-insets:0.16.1"

    // Web Rtc
    implementation 'org.webrtc:google-webrtc:1.0.32006'

    // compose image loading
    implementation("io.coil-kt:coil-compose:1.4.0")

    // firebase storage
    implementation platform('com.google.firebase:firebase-bom:27.0.0')
    implementation 'com.google.firebase:firebase-storage-ktx'

    //ktor
    def ktor_version = "1.6.3"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation("io.ktor:ktor-client-cio:$ktor_version")
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-websockets:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"

    // phone number verify
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.46'

    // splash screen
    implementation 'androidx.core:core-splashscreen:1.0.0-rc01'

    // compose permission handler
    implementation "com.google.accompanist:accompanist-permissions:0.22.1-rc"


    // all test implementation
    // test engine
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    // room database test
    testImplementation "androidx.room:room-testing:$room_version"

    // exo player
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'

    // Disk Cache
    implementation 'com.jakewharton:disklrucache:2.0.2'
    //implementation 'com.epam.coroutinecache:coroutinecache:0.9.6'

    // Compose Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"

    // Compose Pager Layout
    def pager_version = "0.24.9-beta"
    implementation "com.google.accompanist:accompanist-pager:$pager_version"
    // If using indicators, also depend on
    implementation "com.google.accompanist:accompanist-pager-indicators:$pager_version"

    // easy compose navigation Destination
//    implementation 'io.github.raamcosta.compose-destinations:core:1.5.0-beta'
//    ksp 'io.github.raamcosta.compose-destinations:ksp:1.5.0-beta'

    // Cache
    implementation 'com.github.kittinunf.fuse:fuse-android:1.3.0'
}

